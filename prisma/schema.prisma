// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  firstname         String
  lastname          String
  email             String             @unique
  phone             String?
  userethaddress    String
  UserOrganizations UserOrganization[]
  UserEvent         UserEvent[]

  @@index([email, userethaddress])
}

model Organization {
  id                Int                @id @default(autoincrement())
  name              String
  email             String
  phone             String
  address           String
  isBloodBank       Boolean
  UserOrganizations UserOrganization[]
}

model UserOrganization {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
  isApproved     Boolean      @default(false)
}

model Event {
  id              Int             @id @default(autoincrement())
  eventPrivateKey String          @db.VarChar(255)
  eventEthAddress String          @db.VarChar(255)
  creatorId       Int
  EventDonation   EventDonation[]
  users           UserEvent[]
}

model UserEvent {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  event    Event  @relation(fields: [eventId], references: [id])
  eventId  Int
  userType String @db.VarChar(255)
}

model EventDonation {
  id              Int      @id @default(autoincrement())
  event           Event    @relation(fields: [eventId], references: [id])
  eventId         Int
  donorEthAddress String   @db.VarChar(255)
  donorName       String   @db.VarChar(255)
  bloodGroup      String   @db.VarChar(255)
  phone           String   @db.VarChar(255)
  dateOfBirth     DateTime
  gender          String   @db.VarChar(255)
  consentType     String   @db.VarChar(255)
  consentValue    String   @db.VarChar(255)
  bloodBagNumber  Int
}
